#!/bin/python3
from PIL import Image
from fire import Fire

# ascii characters used to build the output text
ASCII_CHARS = [
	"$",
	"@",
	"B",
	"%",
	"8",
	"&",
	"W",
	"M",
	"#",
	"*",
	"o",
	"a",
	"h",
	"k",
	"b",
	"d",
	"p",
	"q",
	"w",
	"m",
	"Z",
	"O",
	"0",
	"Q",
	"L",
	"C",
	"J",
	"U",
	"Y",
	"X",
	"z",
	"c",
	"v",
	"u",
	"n",
	"x",
	"r",
	"j",
	"f",
	"t",
	"/",
	"\\",
	"|",
	"(",
	")",
	"1",
	"{",
	"}",
	"[",
	"]",
	"?",
	"-",
	"_",
	"+",
	"~",
	"<",
	">",
	"i",
	"!",
	"l",
	"I",
	";",
	":",
	",",
	'"',
	"^",
	"`",
	"'",
	".",
	" ",
]

# resize image according to a new width
def resize_image(image, new_width=100):
	width, height = image.size
	ratio = height / width
	new_height = int(new_width * ratio)
	resized_image = image.resize((new_width, new_height))
	return resized_image


# convert each pixel to grayscale
def grayify(image):
	grayscale_image = image.convert("L")
	return grayscale_image


# convert pixels to a string of ascii characters
def pixels_to_ascii(image):
	pixels = image.getdata()
	characters = "".join([ASCII_CHARS[pixel // 25] for pixel in pixels])
	return characters


def main(path: str, newWidth=100):
	# attempt to open image from user-input
	try:
		image = Image.open(path)
	except:
		print(path, " is not a valid pathname to an image.")
		return

	# convert image to ascii
	new_image_data = pixels_to_ascii(grayify(resize_image(image)))

	# format
	pixel_count = len(new_image_data)
	ascii_image = "\n".join(
		[
			new_image_data[index : (index + newWidth)]
			for index in range(0, pixel_count, newWidth)
		]
	)

	# print result
	print(ascii_image)

	# save result to "ascii_image.txt"
	with open("ascii_image.txt", "w") as f:
		f.write(ascii_image)


# run program
if __name__ == "__main__":
	Fire(main)
